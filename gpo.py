#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/rosa/bin/Py/Gui/list.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os, sys, csv
import pyperclip as clip
from pyConfigParser import ConfigIni

#from gi.repository import Gtk, Gdk

from hashlib import blake2s
from base64 import b64encode #b64decode,

import gpo_dlg
from PyQt5 import QtWidgets
#from PyQt5.QtWidgets import QApplication, QWidget, QComboBox, QPushButton, QVBoxLayout,QMenu,QDesktopWidget,QMainWindow

#- ttutto ciò che viene dichiarato in class..() diventa proptietà di self.
class Gpo(QtWidgets.QMainWindow, gpo_dlg.Ui_GPO):
    totItems = 0
    curIdxCmb = 0
    homeDir = os.getenv('home')
    arrayCmbUrl = []

    def Importa(fileImport, selfDiz, creaIni = True):
        arrayCmbUrl = []
        arrayCmbUrl.append([])
        arrayCmbUrl[0].append(' ')
        arrayCmbUrl[0].append(' ')
        arrayCmbUrl[0].append(' ')
        idx = 1

    # Define the custom dialect
        diz = csv.register_dialect("diz", delimiter=",", quotechar='"', quoting=csv.QUOTE_MINIMAL)

    # Open the file in read mode
        if creaIni: 
            configuraPWD = ConfigIni(os.getcwd(), 'Gpo.ini')
        else:
            fdiz = open(selfDiz, "w")

        with open(fileImport, "r") as csv_file:
            # Create a reader object, using the custom dialect
            csv_reader = csv.reader(csv_file, dialect="diz")
            # Read the data from the file
            for row in csv_reader:
                # Process the data in the row
                #print(row[0])

                if row[0].find('http') == 0:
                    arrayCmbUrl.append([])

                    arrayCmbUrl[idx].append(row[0])
                    arrayCmbUrl[idx].append(row[1])
                    arrayCmbUrl[idx].append(row[2])

                    if creaIni:
                        configuraPWD.sezione(row[0])
                        configuraPWD.sezione(row[0],"Utente",row[1])
                        configuraPWD.sezione(row[0],"Passwowd",row[2])
                    else:
                        fdiz.writelines('"'+row[0]+'","'+row[1]+'","'+row[2] +'"\n')

                    idx += 1
            if creaIni:
                configuraPWD.salva()
            else: 
                fdiz.close()

        arrayCmbUrl.sort()
        return arrayCmbUrl

        # Set initial path to current working directory
    selfDiz = homeDir + "/.config/gpo/Gpo.ini"
    if len(sys.argv) == 2:
        fileImport = sys.argv[1]
        if os.path.exists(fileImport):
            arrayCmbUrl = Importa(fileImport, selfDiz)
        else:
            raise 'file importazione inesistente'
    else:
    #- carica tutto
        if os.path.exists(selfDiz):
            arrayCmbUrl = []
            configuraGpo = ConfigIni(os.getcwd(), 'Gpo.ini')
            
            arrayCmbUrl = configuraGpo.leggiIni(3) #- 3 elem vuoti
            '''
            arrayCmbUrl[ultimo].append(' ') #(arrayCmbUrl[0][0]-url)
            arrayCmbUrl[ultimo].append(' ') #(arrayCmbUrl[0][1]-uti)
            arrayCmbUrl[ultimo].append(' ') #(arrayCmbUrl[0][2]-pwd)
            '''
            arrayCmbUrl.sort

        else:
            raise 'file importazione inesistente'
    
#-- init dialog
    def __init__(self, parent=None):
        super(Gpo, self).__init__(parent)
        self.setupUi(self)
        self.setGeometry(400, 150, 627, 246)

        #self.window.connect
        #self.cmbUrl = CheckableComboBox()
        self.cmbUrl.setEnabled(False)

        self.btnCrea.clicked.connect(self.Crea)
        self.btnAnnulla.clicked.connect(self.Annulla)
        self.btnCopy.clicked.connect(self.Copy)
        self.btnSal.clicked.connect(self.Sal)
        self.btnMod.clicked.connect(self.Mod)
        #self.cmbUrl.changeEvent.connect()  #- self.text_changed
        self.cmbUrl.currentTextChanged.connect(self.selCmb)

        #self.cmbUrl.addItems(self.arrayCmbUrl)
        idx = 0
        for row in self.arrayCmbUrl:
            self.cmbUrl.addItem(row[0], idx)
            idx += 1

        self.totItems = idx
        self.lbUti.setEnabled(True)
        self.cmbUrl.setEnabled(True)
        self.cmbUrl.setCurrentIndex = 1
        self.btnSal.setEnabled(False)
        self.show()
#-- init dialog

    def Crea(self):
        url = self.lblUrl.text()
        uti = self.lbUti.text().strip()
        if uti == "":
            self.Messaggio("Messaggio Errore", "Utente mancante")
            return 0

        daSx = url.find("www.")
        if daSx == -1:
            daSx = url.find("://") -1

        daSx += 4
        daDx = url.rfind(".")
        if daDx == -1:
            self.Messaggio("Messaggio Errore", "Controllare URL inserito")
            return 0

        primo = url[daSx:daDx]
        primo = primo[0:1].upper()
        pwd = ("123"+primo+url[daSx+1:daDx]+"!")

        idx = self.totItems
        if idx == 0:
            self.arrayCmbUrl.append([])
            self.arrayCmbUrl[idx].append(" ")
            self.arrayCmbUrl[idx].append(" ")
            self.arrayCmbUrl[idx].append(" ")
            self.cmbUrl.addItem(' ', idx)
            idx +=1

        #uti = self.lbUti.text()

        self.arrayCmbUrl.append([])
        self.arrayCmbUrl[idx].append(url)
        self.arrayCmbUrl[idx].append(uti) 
        self.arrayCmbUrl[idx].append(pwd)
        self.arrayCmbUrl.sort()

        self.cmbUrl.addItem(url, idx)
        self.configuraGpo.sezione(url,'utente', uti)
        self.configuraGpo.sezione(url,'password', pwd)
        self.cmbUrl.setCurrentText(' ')
        self.totItems = idx        
        self.lblPwd.setText(pwd)
        self.lblPwdSav.setText(pwd)
        self.lblPwdSav.setReadOnly(False)
        self.lbUti.setReadOnly(False)
        self.btnSal.setEnabled(True)
        
        #self.cmbUrl.setCurrentIndex('0')
        #self.btnSal.setEnabled(True)
        #self.lblPwd.setText("")
        #url = self.lblUrl.setText("")
        #uti = self.lbUti.setText("")
        #pwd = self.lblPwdSav.setText("")

    def Sal(self):
        uti = self.lbUti.text().strip()
        if uti == "":
            self.Messaggio("Messaggio Errore", "Utente mancante")
            return 0
       
        url = self.cmbUrl.currentText()
        uti = self.lbUti.text()
        pwd = self.lblPwdSav.text()
        self.arrayCmbUrl[self.curIdxCmb][2] = pwd
        self.configuraGpo.sezione(url,'utente', uti)
        self.configuraGpo.sezione(url,'password', pwd)
        self.configuraGpo.salva()

        '''
        fileImport = self.selfDiz
        with open(fileImport, "a") as file:
            file.writelines('"'+url+'","'+uti+'","'+pwd+'"\n')
            file.close
        '''

        self.cmbUrl.setCurrentText(' ')
        self.lblPwd.setText("")
        self.lblUrl.setText("")
        self.lbUti.setText("")
        self.lblPwdSav.setText("")
        self.btnSal.setEnabled(False)

    def Copy(self):
        pwd = self.lblPwdSav.text()
        idx = pwd.find('#')
        nCar = 0
        if idx >-1:
            nCar = int(pwd[idx+1:])  #-2
            pwd = pwd[:idx]

        key = b'23711'
        h = blake2s(key=key)
        h.update(pwd.encode())
        dig = h.digest()
        pe=b64encode(dig).decode('utf-8')
        if nCar:
            pe = pe[:nCar]

        '''
        h = hashlib.sha512()
        h.update(pwd.encode())
        pe = h.hexdigest()
        '''

        clip.copy(pe) #+"X!"

        self.lblPwdSav.setReadOnly(True)
        self.btnSal.setEnabled(True)

    def Mod(self):
        self.curIdxCmb = self.cmbUrl.currentIndex()

        self.lblUrl.setText(self.arrayCmbUrl[self.curIdxCmb][0])
        self.lblPwdSav.setText(self.arrayCmbUrl[self.curIdxCmb][2])
        self.lbUti.setText(self.arrayCmbUrl[self.curIdxCmb][1])
        self.lblPwdSav.setReadOnly(False)
        #self.lbUti.setReadOnly(False)
        self.btnSal.setEnabled(True)

    def selCmb(self):
        self.curIdxCmb = self.cmbUrl.currentIndex()
        self.lbUti.setText(self.arrayCmbUrl[self.curIdxCmb][1])
        self.lblPwdSav.setText(self.arrayCmbUrl[self.curIdxCmb][2])
        
        #-print(self.arrayCmbUrl[ikdxCmb][0]+'-'+self.arrayCmbUrl[ikdxCmb][1]+'-'+self.arrayCmbUrl[ikdxCmb][2])

    def Annulla(self):
        self.close()

    def Messaggio(self, msgT, msgE):
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Warning)
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok)

        msg.setWindowTitle(msgT)
        msg.setText("Attenzione")
        msg.setInformativeText(msgE)

        msg.exec_()

##-- inizio
def ExeGPO(par1): #main():
    app = QtWidgets.QApplication(sys.argv)
    form = Gpo()
    #form.show() spostato in __init__
    #sys.exit(app.exec_())

    app.exec_()

def main():
    ExeGPO('param')

if __name__ == '__main__':
    main()
